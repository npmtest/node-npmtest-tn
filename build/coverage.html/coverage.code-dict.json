{"/home/travis/build/npmtest/node-npmtest-tn/test.js":"/* istanbul instrument in package npmtest_tn */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-tn/lib.npmtest_tn.js":"/* istanbul instrument in package npmtest_tn */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_tn = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_tn = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-tn/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-tn && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_tn */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_tn\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_tn.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_tn.rollup.js'] =\n            local.assetsDict['/assets.npmtest_tn.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_tn.__dirname + '/lib.npmtest_tn.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-tn/node_modules/tn/main.js":"var kitchen = require('./lib/kitchen');\n\nexports.parse = function (args) {\n\tvar tray;\n\n\ttray = kitchen.cook(args);\n\n\treturn tray ? tray.dinner : args;\n};\n","/home/travis/build/npmtest/node-npmtest-tn/node_modules/tn/lib/kitchen.js":"'use strict';\n\nvar _ = require('underscore'),\n  fields = require('fields');\n\nvar config = require('./config'),\n  recipes = require('./recipes'),\n  logger = require('./logger'),\n  utils = require('./utils');\n\nexports.cook = cook;\nexports.confirm = confirm;\n\nfunction cook(ingr, opts) {\n  var pan, i, tray = {};\n\n  opts || (opts = {});\n\n  // no ingredients, no cooking\n  if (!_.isArray(ingr) || ingr.length === 0) {\n    return;\n  }\n\n  // skip help, version and --skip\n  if (_.intersection(ingr, ['-h', '--help', '-v', '--version']).length > 0) {\n    return;\n  }\n\n  // don't change original object\n  pan = _.clone(ingr);\n\n  // --verbose\n  if ((i = pan.indexOf('--verbose')) !== -1) {\n\n    // remove\n    pan.splice(i, 1);\n\n    // set flag\n    config.verbose = true;\n\n    // save remainder as original recipe\n    tray.recipe = _.clone(pan);\n  }\n\n  // first ingredient is a command recipe\n  if (pan[0].substr(0, 1) !== '-' && recipes.has(pan[0])) {\n    pan[0] = '--' + pan[0];\n  }\n\n  function heat(args, doNotOverheat, prefix) {\n    var i, arg, matches, name, value, recipe, before, after;\n\n    i = 0;\n\n    // loop until end\n    while (i < args.length) {\n      arg = args[i];\n\n      matches = arg.match(/^--([a-z0-9-]+)$/);\n\n      if (matches) {\n        name = matches[1];\n\n        if (name && recipes.has(name)) {\n\n          // prevent infinite loop\n          if (doNotOverheat && _.contains(doNotOverheat, name)) {\n            // config.verbose && logger.debug('Skipped ' + name.cyan + ' recursive recipe'.white);\n\n          } else {\n\n            // find if next arg is value\n            value = (args[i + 1] && args[i + 1].substr(0, 1) !== '-') ? args[i + 1] : null;\n\n            config.verbose && logger.debug(prefix + 'Cooking ' + name.cyan + ' recipe'.white + (value ? ' with ' + value.cyan : '') + ' ..');\n\n            // replace recipe name (and value) with the args of the recipe\n            recipe = recipes.get(name, value);\n            recipe = heat(recipe, _.union(doNotOverheat || [], [name]), prefix + '  ');\n\n            before = args.slice(0, i);\n            after = args.slice(i + (value ? 2 : 1));\n\n            args = before.concat(recipe, after);\n\n            config.verbose && logger.debug(prefix + '.. into: '.white + utils.join(before).yellow + ' ' + utils.join(recipe).cyan + ' ' + utils.join(after).yellow);\n\n            // hop over the heated recipe\n            i += recipe.length - 1;\n          }\n        }\n      }\n\n      i++;\n    }\n\n    return args;\n  }\n\n  pan = heat(pan, null, '');\n\n  pan = decorate(pan);\n\n  tray.dinner = pan;\n\n  return tray;\n}\n\nfunction confirm(tray, eat) {\n\n  fields.select({\n    title: 'What would you like me to do?',\n    numbered: true,\n    default: 1,\n    options: [{\n      label: 'Execute: ' + 'ti '.yellow + utils.join(tray.dinner).yellow,\n      value: 'execute'\n    }, {\n      label: 'Save as recipe: ' + utils.join(tray.recipe).yellow,\n      value: 'save'\n    }, {\n      label: 'Exit',\n      value: 'exit'\n    }]\n  }).prompt(function (err, value) {\n\n    if (err) {\n      console.log();\n      console.error(('' + err).red);\n\n    } else if (value === 'execute') {\n      eat();\n\n    } else if (value === 'save') {\n\n      fields.text({\n        title: 'What do you want to name it?',\n        validate: function (value) {\n\n          if (/^([a-z0-9]+(?:-[a-z0-9]+)*)$/i.test(value)) {\n            return true;\n          }\n\n          console.error('Error: format as: my-Recipe'.red);\n\n          return false;\n        }\n      }).prompt(function (err, value) {\n\n        if (err) {\n          console.log();\n          console.error(('' + err).red);\n        } else {\n          console.log();\n          recipes.save(value, tray.recipe);\n        }\n\n        process.exit();\n\n      });\n\n    } else {\n      process.exit();\n    }\n  });\n}\n\nfunction decorate(pan) {\n  var platform, i, arg, matches, shrt, lng, j, l, dupe;\n\n  // assume build\n  if (pan[0][0] === '-') {\n    pan.unshift('build');\n  }\n\n  // read the (last) platform\n  if ((i = pan.lastIndexOf('--platform')) !== -1 || (i = pan.lastIndexOf('-p')) !== -1) {\n    platform = pan[i + 1];\n  }\n\n  for (i = 0; i < pan.length; i++) {\n    arg = pan[i];\n\n    if (arg.substr(0, 1) === '-') {\n      matches = arg.match(/^-([a-z])$/i);\n\n      // resolve aliases\n      if (matches) {\n        shrt = matches[1];\n\n        if (config.aliases.shared[shrt]) {\n          lng = config.aliases.shared[shrt];\n        } else if (config[platform] && config[platform][shrt]) {\n          lng = config[platform][shrt];\n        } else {\n          lng = null;\n        }\n\n        if (lng) {\n          pan[i] = '--' + lng;\n\n          config.verbose && logger.debug('Resolved ' + shrt.cyan + ' option alias: '.white + 'ti '.yellow + utils.join(pan).yellow);\n        }\n      }\n\n      // remove earlier duplicates\n      for (j = 0; j < i; j++) {\n\n        if (pan[j] === pan[i]) {\n\n          l = (pan[j + 1] && pan[j + 1].substr(0, 1) !== '-') ? 2 : 1;\n\n          dupe = pan.slice(j, j + l);\n\n          // remove duplicate option (+ value) and rebase i\n          i = i - pan.splice(j, l).length;\n\n          config.verbose && logger.debug('Removed ' + utils.join(dupe).cyan + ' duplicate: '.white + 'ti '.yellow + utils.join(pan).yellow);\n        }\n      }\n    }\n  }\n\n  return pan;\n}\n","/home/travis/build/npmtest/node-npmtest-tn/node_modules/tn/lib/config.js":"module.exports = {\n\n  verbose: false,\n\n  aliases: {\n    android: {\n      A: 'android-sdk',\n      B: 'avd-abi',\n      D: 'deploy-type',\n      I: 'avd-id',\n      K: 'keystore',\n      L: 'alias',\n      P: 'store-password',\n      S: 'avd-skin'\n    },\n    blackberry: {\n      A: 'ip-address',\n      D: 'debug-token',\n      K: 'keystore-password',\n      N: 'ndk',\n      P: 'password'\n    },\n    ios: {\n      D: 'deploy-type',\n      F: 'device-family',\n      I: 'ios-version',\n      K: 'keychain',\n      P: 'pp-uuid',\n      R: 'distribution-name',\n      S: 'sim-version',\n      V: 'developer-name',\n      Y: 'sim-type'\n    },\n    mobileweb: {\n      D: 'deploy-type'\n    },\n    shared: {\n      C: 'device-id',\n      O: 'output-dir',\n      T: 'target',\n\n      b: 'build-only',\n      f: 'force',\n      d: 'project-dir',\n      p: 'platform',\n      q: 'quiet',\n      s: 'sdk'\n    }\n\n  }\n\n};","/home/travis/build/npmtest/node-npmtest-tn/node_modules/tn/lib/recipes.js":"var fs = require(\"fs\"),\n  path = require(\"path\"),\n  logger = require(\"./logger\"),\n  utils = require('./utils'),\n  colors = require('colors'),\n  _ = require(\"underscore\");\n\nexports.has = has;\nexports.get = get;\nexports.list = list;\nexports.save = save;\nexports.remove = remove;\nexports.rename = rename;\nexports.reset = reset;\n\nvar path_home = process.env[(process.platform === 'win32') ? 'USERPROFILE' : 'HOME'];\nvar path_user = path.join(path_home, '.tn.json');\nvar path_project = path.join(process.cwd(), \"tn.json\");\n\nvar recipes_system = require('./../tn.json'),\n  recipes_user = fs.existsSync(path_user) ? require(path_user) : {},\n  recipes_project = fs.existsSync(path_project) ? require(path_project) : {},\n  recipes_combined = _.extend({}, recipes_system, recipes_user, recipes_project);\n\nfunction has(name) {\n  return _.has(recipes_combined, name);\n}\n\nfunction get(name, ingredient) {\n  var recipe;\n\n  if (typeof recipes_combined[name] === 'string') {\n    recipe = recipes_combined[name].split(' ');\n  } else {\n    recipe = recipes_combined[name];\n  }\n\n  if (ingredient) {\n\n    recipe = _.map(recipe, function(val) {\n\n      // TODO: Account for spaces in ingredient (\"ddd ddd\")\n      return val.replace('%s', ingredient);\n    });\n  }\n\n  return recipe;\n}\n\nfunction list(forReadMe) {\n\n  if (forReadMe) {\n\n    _.each(recipes_system, function(recipe, name) {\n      console.log('|' + name + '|' + utils.join(recipe) + '|');\n    });\n\n    return;\n  }\n\n  console.log('Recipes defined by: ' + ('built-in'.green) + ', ' + ('user'.cyan) + ', ' + ('user-override'.blue) + ', ' + ('project'.yellow) + ' and ' + ('project-override'.red));\n  console.log();\n\n  var recipes = _.keys(recipes_combined).sort();\n\n  _.each(recipes, function(recipe) {\n    var args = recipes_combined[recipe],\n      color;\n\n    if (_.has(recipes_project, recipe)) {\n      color = _.has(recipes_system, recipe) || _.has(recipes_user, recipe) ? 'red' : 'yellow';\n    } else if (_.has(recipes_user, recipe)) {\n      color = _.has(recipes_system, recipe) ? 'blue' : 'cyan';\n    } else {\n      color = 'green';\n    }\n\n    var commands = '';\n\n    if (_.isString(args)) {\n      commands += ' ' + args;\n    } else {\n      commands += utils.join(args);\n    }\n\n    console.log('  ' + recipe + ': ' + commands[color]);\n\n  });\n\n  console.log();\n}\n\nfunction save(recipe, args, location) {\n\n  if (!validateRecipeName(recipe)) {\n    return;\n  }\n\n  location = location || 'user';\n\n  if (location == 'project' && _.has(recipes_project, recipe)) {\n    logger.info('Changed existing project recipe');\n  } else if (location == 'user' && _.has(recipes_user, recipe)) {\n    logger.info('Changed existing user recipe');\n  } else if (location == 'project' && _.has(recipes_user, recipe)) {\n    logger.info('Saved project recipe, overriding user');\n  } else if (location === 'project' && _.has(recipes_system, recipe)) {\n    logger.info('Saved project recipe, overriding built-in');\n  } else if (location === 'user' && _.has(recipes_system, recipe)) {\n    logger.info('Saved user recipe, overriding built-in');\n  } else {\n    logger.info('Saved ' + location + ' recipe');\n  }\n\n  if (location == 'project') {\n    recipes_combined[recipe] = recipes_project[recipe] = args;\n    fs.writeFileSync(path_project, JSON.stringify(recipes_project));\n  } else {\n    recipes_combined[recipe] = recipes_user[recipe] = args;\n    fs.writeFileSync(path_user, JSON.stringify(recipes_user));\n  }\n\n  var clr;\n\n  if (_.has(recipes_project, recipe)) {\n    clr = _.has(recipes_system, recipe) || _.has(recipes_user, recipe) ? 'red' : 'yellow';\n  } else if (_.has(recipes_user, recipe)) {\n    clr = _.has(recipes_system, recipe) ? 'blue' : 'cyan';\n  } else {\n    clr = 'green';\n  }\n\n  console.log();\n  console.log('  ' + recipe + ': ' + utils.join(args)[clr]);\n\n  console.log();\n}\n\nfunction remove(recipe, location) {\n\n  if (!validateRecipeName(recipe)) {\n    return;\n  }\n\n  location = location || 'user';\n\n  if (_.has(recipes_user, recipe) === false && _.has(recipes_project, recipe) === false) {\n    logger.error('Unknown user or project recipe: ' + (recipe || '(none)').cyan);\n    return;\n  }\n\n  if (location == 'project') {\n    delete recipes_project[recipe];\n    fs.writeFileSync(path_project, JSON.stringify(recipes_project));\n  } else {\n    delete recipes_user[recipe];\n    fs.writeFileSync(path_user, JSON.stringify(recipes_user));\n  }\n\n  recipes_combined = _.extend({}, recipes_system, recipes_user, recipes_project);\n\n  logger.info('Removed ' + location + ' recipe: ' + recipe.cyan);\n\n  console.log();\n}\n\nfunction rename(oldRecipe, newRecipe, location) {\n\n  if (!validateRecipeName(newRecipe)) {\n    return;\n  }\n\n  if (_.has(recipes_user, oldRecipe) === false && _.has(recipes_project, oldRecipe) === false) {\n    logger.error('Unknown user or project recipe: ' + oldRecipe.yellow);\n    return;\n  }\n\n  if (location == 'project') {\n    recipes_project[newRecipe] = recipes_project[oldRecipe];\n    delete recipes_project[oldRecipe];\n    fs.writeFileSync(path_project, JSON.stringify(recipes_project));\n  } else {\n    recipes_user[newRecipe] = recipes_user[oldRecipe];\n    delete recipes_user[oldRecipe];\n    fs.writeFileSync(path_user, JSON.stringify(recipes_user));\n  }\n\n  logger.info('Renamed recipe: ' + oldRecipe.yellow + ' > ' + newRecipe.yellow);\n  recipes_combined = _.extend({}, recipes_system, recipes_user);\n\n  console.log();\n}\n\nfunction reset(location) {\n\n  if (location == 'project') {\n    fs.unlinkSync(path_project);\n    logger.info('Reset project recipes');\n  } else {\n    fs.unlinkSync(path_user);\n    logger.info('Reset user recipes');\n  }\n\n  console.log();\n}\n\nfunction validateRecipeName(name) {\n\n  if (!name.match(/^[a-z0-9]+(-[a-z0-9]+)*$/i)) {\n    logger.error('Invalid recipe name: ' + (name || '(none)').yellow);\n    return false;\n  }\n\n  return true;\n}","/home/travis/build/npmtest/node-npmtest-tn/node_modules/tn/lib/logger.js":"var colors = require('colors'),\n  _ = require('underscore');\n\nvar levels = {\n  info: {\n    color: colors.white\n  },\n  trace: {\n    color: colors.grey\n  },\n  debug: {\n    color: colors.blue,\n    level: 'log'\n  },\n  error: {\n    color: colors.red\n  },\n  warn: {\n    color: colors.yellow\n  },\n  ok: {\n    color: colors.green,\n    level: 'info'\n  }\n};\n\n_.each(levels, function(settings, label) {\n  exports[label] = function(msg) {\n    console[settings.level || label](settings.color('[' + label.toUpperCase() + ']') + (label.length !== 5 ? (new Array(6 - label.length).join(' ')) : '') + ' ' + msg);\n  };\n});","/home/travis/build/npmtest/node-npmtest-tn/node_modules/tn/lib/utils.js":"var _ = require('underscore');\n\nexports.join = join;\n\nfunction join(args) {\n  var joined = '';\n\n  _.each(args, function(arg) {\n\n    // has space\n    if (arg.indexOf(' ') !== -1) {\n      joined += ' \"' + arg + '\"';\n    } else {\n      joined += ' ' + arg;\n    }\n\n  });\n\n  joined = joined.substr(1);\n\n  return joined;\n}","/home/travis/build/npmtest/node-npmtest-tn/node_modules/tn/lib/setup.js":"#!/usr/bin/env node\n\nvar path = require('path');\n\nvar logger = require('./logger'),\n  recipes = require('./recipes'),\n  compat = require('appc-compat');\n\nexports.uninstall = uninstall;\nexports.generate = generate;\n\nvar PATH = path.resolve(__dirname, '..', 'hooks');\n\nfunction uninstall() {\n  logger.info('Uninstalling the old 2.x Titanium CLI hook..\\n');\n\n  compat.ti(['config', 'paths.hooks', '--remove', PATH], {\n    stdio: 'inherit'\n  }, function () {});\n}\n\nfunction generate() {\n\n  logger.info('Looking up connected devices, emulators and simulators..');\n\n  compat.ti(['info', '-o', 'json'], function process(error, stdout, stderr) { // jshint unused: false\n\n    if (error) {\n      logger.error('Failed to read Titanium info: ' + JSON.stringify([error, stderr]));\n\n    } else {\n\n      console.log();\n\n      var config = JSON.parse(stdout);\n\n      if (config.android) {\n\n        if (config.android.emulators && config.android.emulators.length > 0) {\n\n          config.android.emulators.forEach(function forEach(dev) {\n            var name = dev.name.toLowerCase().replace(/\\.+/g, '').replace(/[^a-z0-9]+/g, '-');\n            var recipe = ['--android', '--emulator', '--device-id', dev.name];\n\n            if (!recipes.has(name) || !arraysIdentical(recipes.get(name), recipe)) {\n              recipes.save(name, recipe);\n            }\n          });\n        }\n\n        if (config.android.devices && config.android.devices.length > 0) {\n\n          config.android.devices.forEach(function forEach(dev) {\n            var name = dev.name.toLowerCase().replace(/\\.+/g, '').replace(/[^a-z0-9]+/g, '-');\n            var recipe = ['--android', '--device', '--device-id', dev.id];\n\n            if (!recipes.has(name) || !arraysIdentical(recipes.get(name), recipe)) {\n              recipes.save(name, recipe);\n            }\n          });\n        }\n      }\n\n      if (config.ios) {\n\n        if (config.ios.devices && config.ios.devices.length > 0) {\n\n          config.ios.devices.forEach(function forEach(dev) {\n\n            if (dev.udid === 'itunes') {\n              return;\n            }\n\n            var name = dev.name.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n            var recipe = ['--ios', '--device', '--device-id', dev.udid];\n\n            if (!recipes.has(name) || !arraysIdentical(recipes.get(name), recipe)) {\n              recipes.save(name, recipe);\n            }\n          });\n        }\n\n        if (config.ios.simulators) {\n          var version, versions = [];\n\n          // Ti 5.0 has a ios and watch object\n          var iosSims = config.ios.simulators.ios ? config.ios.simulators.ios : config.ios.simulators;\n\n          for (version in iosSims) {\n            versions.push(version);\n          }\n\n          // we want newest versoon first\n          versions.sort();\n          versions.reverse();\n\n          versions.forEach(function forEach(version) {\n\n            iosSims[version].forEach(function forEach(dev) {\n              var name = dev.name.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n              var recipe = ['--ios', '--simulator', '--device-id', dev.udid];\n\n              if (recipes.has(name) && versions[0] !== version) {\n                name = name + '-ios' + version.replace(/\\./, '');\n              }\n\n              if (!recipes.has(name) || !arraysIdentical(recipes.get(name), recipe)) {\n                recipes.save(name, recipe);\n              }\n            });\n\n          });\n        }\n      }\n\n      logger.info('Done');\n    }\n\n  });\n}\n\nfunction arraysIdentical(a, b) {\n  var i = a.length;\n\n  if (i !== b.length) {\n    return false;\n  }\n\n  while (i--) {\n\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"}